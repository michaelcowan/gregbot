/*
 * Copyright (c) 2024 Mike Cowan.
 *
 * This source code is subject to the terms of the GNU General Public
 * License, version 3. If a copy of the GPL was not distributed with this
 * file, You can obtain one at: https://www.gnu.org/licenses/gpl-3.0.txt
 */

package io.blt.gregbot.ui.forms;

import com.formdev.flatlaf.util.SystemInfo;
import io.blt.gregbot.ApplicationProperties;
import io.blt.gregbot.ApplicationResources;
import io.blt.gregbot.ui.components.LogbackPane;
import io.blt.gregbot.ui.dialogs.About;
import io.blt.util.Obj;

import static io.blt.gregbot.ui.utils.AwtUtils.scaleDimension;
import static io.blt.gregbot.ui.utils.AwtUtils.screenSize;

import java.awt.*;
import java.awt.event.ActionListener;
import javax.swing.*;

public class MainForm extends JFrame {

    private JPanel contentPane;
    private LogbackPane logbackPane;

    public MainForm() {
        setJMenuBar(buildMenuBar());
        setContentPane(contentPane);

        setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);

        setIconImages(ApplicationResources.icons());

        setTitle(ApplicationProperties.name());
        setSize(scaleDimension(screenSize(), 0.9));
        setLocationRelativeTo(null);

        logbackPane.setFont(new Font(Font.MONOSPACED, Font.PLAIN, 12));
    }

    private JMenuBar buildMenuBar() {
        var menuBar = new JMenuBar();

        var file = menuBar.add(new JMenu("File"));
        var help = menuBar.add(new JMenu("Help"));

        if (!SystemInfo.isMacOS) {
            file.add(buildMenuItemWithAction("Exit", e -> {
                if (shouldExit()) {
                    System.exit(0);
                }
            }));

            help.add(buildMenuItemWithAction("About", e -> new About()));
        }

        var desktop = Desktop.getDesktop();

        if (desktop.isSupported(Desktop.Action.APP_ABOUT)) {
            desktop.setAboutHandler(e -> new About());
        }

        if (desktop.isSupported(Desktop.Action.APP_QUIT_HANDLER)) {
            desktop.setQuitHandler((e, response) -> {
                if (shouldExit()) {
                    response.performQuit();
                } else {
                    response.cancelQuit();
                }
            });
        }

        return menuBar;
    }

    private JMenuItem buildMenuItemWithAction(String text, ActionListener action) {
        return Obj.poke(new JMenuItem(text), i -> i.addActionListener(action));
    }

    private boolean shouldExit() {
        // TODO Add popup and condition around exiting
        return true;
    }

    {
        // GUI initializer generated by IntelliJ IDEA GUI Designer
        // >>> IMPORTANT!! <<<
        // DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        contentPane = new JPanel();
        contentPane.setLayout(new GridBagLayout());
        logbackPane = new LogbackPane();
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        contentPane.add(logbackPane, gbc);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return contentPane;
    }

}
